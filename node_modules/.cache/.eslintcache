[{"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx":"1","/home/mariana/Documents/reactjs/Letmeask/src/App.tsx":"2","/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx":"3","/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx":"4","/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx":"5","/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx":"6","/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx":"7","/home/mariana/Documents/reactjs/Letmeask/src/hooks/useAuth.ts":"8"},{"size":260,"mtime":1649264606620,"results":"9","hashOfConfig":"10"},{"size":467,"mtime":1649284623078,"results":"11","hashOfConfig":"10"},{"size":1710,"mtime":1649284863569,"results":"12","hashOfConfig":"10"},{"size":716,"mtime":1649272459123,"results":"13","hashOfConfig":"10"},{"size":257,"mtime":1648999911031,"results":"14","hashOfConfig":"10"},{"size":1876,"mtime":1649375832344,"results":"15","hashOfConfig":"10"},{"size":1718,"mtime":1649333797599,"results":"16","hashOfConfig":"10"},{"size":186,"mtime":1649284866177,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"2inqt0",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx",[],[],["47","48"],"/home/mariana/Documents/reactjs/Letmeask/src/App.tsx",[],[],["49","50"],"/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx",["51","52"],[],"/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx",[],[],["53","54"],"/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx",["55"],[],"import {Link} from 'react-router-dom'\nimport {FormEvent, useState} from 'react'\n\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\n\nimport '../styles/auth.scss';\nimport { Button } from '../components/Button';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\n\nexport function NewRoom() {\n\n    const { user} = useAuth();\n\n    const [newRoom, setNewRoom] = useState('');\n\n    async function handleCreateRoom(event: FormEvent) {\n        event.preventDefault();\n\n        if(newRoom.trim() === '') {\n            return;\n        }\n\n        const roomRef = database.ref('rooms');\n\n        const firebaseRoom = await roomRef.push({\n            title: newRoom,\n            authorId: user?.id\n        })\n    }\n\n    return (\n        <div id='page-auth'>\n            <aside>\n                <img src={illustrationImg} alt =\"ilustração de pergunta e respostas\"/>\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\n                <p>Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main>\n                <div className='main-content'>\n                    <img src={logoImg} alt=\"imagem do logo\"/>\n                    <h1>{user?.name}</h1>\n                    <h2>Criar uma nova sala</h2>\n                    <form onSubmit={handleCreateRoom}>\n                        <input type=\"text\"\n                        placeholder=\"Nome da sala\"\n                        onChange={event => setNewRoom(event.target.value)}\n                        value={newRoom}\n                       />\n                       <Button type='submit'>Criar sala</Button>\n                    </form>\n                    <p>Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link></p>\n                </div>\n            </main>\n        </div>\n    )\n}","/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx",["56","57","58"],[],"// import firebase from \"firebase/compat\";\nimport firebase from \"firebase/compat/app\";\nimport { createContext,ReactNode, useEffect, useState } from \"react\";\nimport { auth } from \"../services/firebase\";\n\ntype User = {\n    id: string;\n    name: string;\n    avatar: string;\n};\n  \ntype AuthContextType = {\n    user: User | undefined;\n    singInWithGoogle: () => Promise<void>;\n};\n  \ntype AuthContextProps = {\n    children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextType);\n\n\nexport function AuthContextProvider(props:AuthContextProps) {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user) {\n        const { displayName, photoURL, uid} = user\n\n        if(!displayName || !photoURL) {\n          throw new Error('Missing informatio from Google Account');\n        }\n        \n        useState({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return() => {\n      unsubscribe();\n    }\n\n  },[] )\n\n  async function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n\n        if(result.user) {\n          const { displayName, photoURL, uid} = result.user\n\n          if(!displayName || !photoURL) {\n            throw new Error('Missing informatio from Google Account');\n          }\n          \n          useState({\n            id: uid,\n            name: displayName,\n            avatar: photoURL\n          })\n        }\n  }\n\n    return(\n        <AuthContext.Provider value={{ user, singInWithGoogle }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}","/home/mariana/Documents/reactjs/Letmeask/src/hooks/useAuth.ts",[],[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":3,"column":16,"nodeType":"67","messageId":"68","endLine":3,"endColumn":24},{"ruleId":"59","replacedBy":"70"},{"ruleId":"61","replacedBy":"71"},{"ruleId":"65","severity":1,"message":"72","line":27,"column":15,"nodeType":"67","messageId":"68","endLine":27,"endColumn":27},{"ruleId":"65","severity":1,"message":"73","line":25,"column":16,"nodeType":"67","messageId":"68","endLine":25,"endColumn":23},{"ruleId":"74","severity":2,"message":"75","line":36,"column":9,"nodeType":"67","endLine":36,"endColumn":17},{"ruleId":"74","severity":2,"message":"76","line":62,"column":11,"nodeType":"67","endLine":62,"endColumn":19},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.",["77"],["78"],"'firebaseRoom' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useState\" is called in function \"singInWithGoogle\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-global-assign","no-unsafe-negation"]