[{"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx":"1","/home/mariana/Documents/reactjs/Letmeask/src/App.tsx":"2","/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx":"3","/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx":"4","/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx":"5","/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx":"6","/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx":"7"},{"size":260,"mtime":1649264606620,"results":"8","hashOfConfig":"9"},{"size":467,"mtime":1649284623078,"results":"10","hashOfConfig":"9"},{"size":1771,"mtime":1649284652974,"results":"11","hashOfConfig":"9"},{"size":716,"mtime":1649272459123,"results":"12","hashOfConfig":"9"},{"size":257,"mtime":1648999911031,"results":"13","hashOfConfig":"9"},{"size":1323,"mtime":1649284651590,"results":"14","hashOfConfig":"9"},{"size":1671,"mtime":1649284678366,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"2inqt0",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx",[],[],["42","43"],"/home/mariana/Documents/reactjs/Letmeask/src/App.tsx",[],[],["44","45"],"/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx",["46","47"],[],"import { useHistory} from 'react-router-dom'\n\nimport { auth, firebase} from '../services/firebase'\n\nimport illustrationImg from '../assets/images/illustration.svg';\nimport logoImg from '../assets/images/logo.svg';\nimport googleImg from '../assets/images/google-icon.svg';\n\nimport '../styles/auth.scss';\nimport { Button } from '../components/Button';\nimport { useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\n\nexport function Home() {\n    const history = useHistory();\n    const {user, singInWithGoogle} = useContext(AuthContext)    \n\n    async function handleCreateRoom() {\n        if(!user) {\n            await singInWithGoogle()\n        }\n\n     history.push('/rooms/news');\n    }\n\n    return (\n        <div id='page-auth'>\n            <aside>\n                <img src={illustrationImg} alt =\"ilustração de pergunta e respostas\"/>\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\n                <p>Tire as dúvidas da sua audiência em tempo real</p>\n            </aside>\n            <main>\n                <div className='main-content'>\n                    <img src={logoImg} alt=\"imagem do logo\"/>\n                    <button onClick={handleCreateRoom} className='create-room'>\n                    <img src={googleImg} alt=\"logo do google\"/>\n                        Crie sua sala com o Google\n                    </button>\n                    <div className='separator'>ou entre em uma sala</div>\n                    <form>\n                        <input type=\"text\"\n                        placeholder=\"digite o código da sala\"\n                       />\n                       <Button type='submit'>Entrar na sala</Button>\n                    </form>\n                </div>\n            </main>\n        </div>\n    )\n}","/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx",[],[],["48","49"],"/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx",["50","51","52","53"],[],"import firebase from \"firebase/compat\";\nimport { createContext,ReactNode, useEffect, useState } from \"react\";\nimport { auth } from \"../services/firebase\";\n\ntype User = {\n    id: string;\n    name: string;\n    avatar: string;\n  }\n  \n  type AuthContextType = {\n    user: User | undefined;\n    singInWithGoogle: () => Promise<void>;\n  }\n  \ntype AuthContextProps = {\n    children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nconst [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user) {\n        const { displayName, photoURL, uid} = user\n\n        if(!displayName || !photoURL) {\n          throw new Error('Missing informatio from Google Account');\n        }\n        \n        useState({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return() => {\n      unsubscribe();\n    }\n\n  },[] )\n\n  async function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n\n        if(result.user) {\n          const { displayName, photoURL, uid} = result.user\n\n          if(!displayName || !photoURL) {\n            throw new Error('Missing informatio from Google Account');\n          }\n          \n          useState({\n            id: uid,\n            name: displayName,\n            avatar: photoURL\n          })\n        }\n  }\n\nexport function AuthContextProvider(props:AuthContextProps) {\n    return(\n        <AuthContext.Provider value={{ user, singInWithGoogle }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":3,"column":16,"nodeType":"62","messageId":"63","endLine":3,"endColumn":24},{"ruleId":"54","replacedBy":"65"},{"ruleId":"56","replacedBy":"66"},{"ruleId":"60","severity":1,"message":"67","line":22,"column":14,"nodeType":"62","messageId":"63","endLine":22,"endColumn":21},{"ruleId":"68","severity":2,"message":"69","line":22,"column":25,"nodeType":"62","endLine":22,"endColumn":33},{"ruleId":"68","severity":2,"message":"70","line":24,"column":3,"nodeType":"62","endLine":24,"endColumn":12},{"ruleId":"68","severity":2,"message":"71","line":59,"column":11,"nodeType":"62","endLine":59,"endColumn":19},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.",["72"],["73"],"'setUser' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useEffect\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useState\" is called in function \"singInWithGoogle\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-global-assign","no-unsafe-negation"]