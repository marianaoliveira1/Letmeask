[{"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx":"1","/home/mariana/Documents/reactjs/Letmeask/src/App.tsx":"2","/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx":"3","/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx":"4","/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx":"5","/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx":"6","/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx":"7","/home/mariana/Documents/reactjs/Letmeask/src/hooks/useAuth.ts":"8","/home/mariana/Documents/reactjs/Letmeask/src/pages/Room.tsx":"9","/home/mariana/Documents/reactjs/Letmeask/src/components/RoomCode.tsx":"10","/home/mariana/Documents/reactjs/Letmeask/src/components/Questions.tsx":"11","/home/mariana/Documents/reactjs/Letmeask/src/hooks/useRoom.ts":"12","/home/mariana/Documents/reactjs/Letmeask/src/pages/AdminRoom.tsx":"13"},{"size":260,"mtime":1650066156741,"results":"14","hashOfConfig":"15"},{"size":735,"mtime":1650216590204,"results":"16","hashOfConfig":"15"},{"size":2341,"mtime":1650115004027,"results":"17","hashOfConfig":"15"},{"size":716,"mtime":1649272459123,"results":"18","hashOfConfig":"15"},{"size":350,"mtime":1650217546196,"results":"19","hashOfConfig":"15"},{"size":1972,"mtime":1650114522004,"results":"20","hashOfConfig":"15"},{"size":1716,"mtime":1650111838493,"results":"21","hashOfConfig":"15"},{"size":186,"mtime":1649284866177,"results":"22","hashOfConfig":"15"},{"size":4498,"mtime":1650224593333,"results":"23","hashOfConfig":"15"},{"size":524,"mtime":1650198281281,"results":"24","hashOfConfig":"15"},{"size":700,"mtime":1650219890197,"results":"25","hashOfConfig":"15"},{"size":1778,"mtime":1650224392829,"results":"26","hashOfConfig":"15"},{"size":2213,"mtime":1650217565744,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"2inqt0",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},"/home/mariana/Documents/reactjs/Letmeask/src/index.tsx",[],[],["72","73"],"/home/mariana/Documents/reactjs/Letmeask/src/App.tsx",[],[],["74","75"],"/home/mariana/Documents/reactjs/Letmeask/src/pages/Home.tsx",["76","77"],[],"/home/mariana/Documents/reactjs/Letmeask/src/services/firebase.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/components/Button.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/pages/NewRoom.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/hooks/useAuth.ts",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/pages/Room.tsx",["78"],[],"import { FormEvent, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Questions';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n  id: string;\n}\nexport function Room() {\n    const { user } = useAuth();\n    const params = useParams<RoomParams>();\n    const [newQuestion, setNewQuestion] = useState('');\n    const roomId = params.id;\n    const {questions, title} = useRoom(roomId);\n  \n    async function handleSendQuestion(event: FormEvent) {\n      event.preventDefault();\n  \n      if (newQuestion.trim() === '') {\n        return;\n      }\n  \n      if (!user) {\n        throw new Error('You must be logged in');\n      }\n  \n      const question = {\n        content: newQuestion,\n        author: {\n          name: user.name,\n          avatar: user.avatar,\n        },\n        isHighlighted: false,\n        isAnswered: false\n      };\n  \n      await database.ref(`rooms/${roomId}/questions`).push(question);\n  \n      setNewQuestion('');\n    }\n\n    async function handleLikeQuestion(questionId: string, likeId: string | undefined) {\n      if(likeId) {\n        await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\n      }\n      else {\n        await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n          authorId: user?.id,\n      })\n      }\n    }\n  \n    return (\n      <div id=\"page-room\">\n        <header>\n          <div className=\"content\">\n            <img src={logoImg} alt=\"Letmeask\" />\n            <RoomCode code={roomId} />\n          </div>\n        </header>\n  \n        <main>\n          <div className=\"room-title\">\n            <h1>Sala {title}</h1>\n            { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\n          </div>\n  \n          <form onSubmit={handleSendQuestion}>\n            <textarea\n              placeholder=\"O que você quer perguntar?\"\n              onChange={event => setNewQuestion(event.target.value)}\n              value={newQuestion}\n            />\n  \n            <div className=\"form-footer\">\n              { user ? (\n                <div className=\"user-info\">\n                  {/* <img src={user.avatar} alt={user.name} /> */}\n                  <span>{user.name}</span>\n                </div>\n              ) : (\n                <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\n              ) }\n              <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\n            </div>\n          </form>\n          <div className=\"question-list\">\n            {\n              questions.map(questions => {\n                return (\n                  <Question\n                    key={questions.id}\n                    content={questions.content}\n                    author={questions.author}\n                  >\n                    <button className={`like-button ${questions.likeId ? 'liked' : ''}`}\n                    type='button'\n                    aria-label='marcar como gostei'\n                    onClick={() => handleLikeQuestion(questions.id, questions.likeId)}\n                    >\n                      {\n                        questions.likeCount > 0 && <span>{questions.likeCount}</span>\n                      }\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                      </svg>\n                    </button>\n\n                  </Question>\n                )\n              })\n            }\n          </div>\n        </main>\n      </div>\n    );\n  }","/home/mariana/Documents/reactjs/Letmeask/src/components/RoomCode.tsx",[],[],["79","80"],"/home/mariana/Documents/reactjs/Letmeask/src/components/Questions.tsx",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/hooks/useRoom.ts",[],[],"/home/mariana/Documents/reactjs/Letmeask/src/pages/AdminRoom.tsx",["81","82"],[],"import { FormEvent, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Questions';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n  id: string;\n}\nexport function AdminRoom() {\n    const { user } = useAuth();\n    const params = useParams<RoomParams>();\n    const [newQuestion, setNewQuestion] = useState('');\n    const roomId = params.id;\n    const {questions, title} = useRoom(roomId);\n  \n    async function handleSendQuestion(event: FormEvent) {\n      event.preventDefault();\n  \n      if (newQuestion.trim() === '') {\n        return;\n      }\n  \n      if (!user) {\n        throw new Error('You must be logged in');\n      }\n  \n      const question = {\n        content: newQuestion,\n        author: {\n          name: user.name,\n          avatar: user.avatar,\n        },\n        isHighlighted: false,\n        isAnswered: false\n      };\n  \n      await database.ref(`rooms/${roomId}/questions`).push(question);\n  \n      setNewQuestion('');\n    }\n  \n    return (\n      <div id=\"page-room\">\n        <header>\n          <div className=\"content\">\n            <img src={logoImg} alt=\"Letmeask\" />\n            <div>\n            <RoomCode code={roomId} />\n            <Button isOutline>Encerrar sala</Button>\n            </div>\n          </div>\n        </header>\n  \n        <main>\n          <div className=\"room-title\">\n            <h1>Sala {title}</h1>\n            { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\n          </div>\n\n          <div className=\"question-list\">\n            {\n              questions.map(questions => {\n                return (\n                  <Question\n                  key={questions.id}\n                    content={questions.content}\n                    author={questions.author}\n                  />\n                )\n              })\n            }\n          </div>\n        </main>\n      </div>\n    );\n  }",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":3,"column":26,"nodeType":"91","messageId":"92","endLine":3,"endColumn":34},{"ruleId":"89","severity":1,"message":"94","line":1,"column":21,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"83","replacedBy":"95"},{"ruleId":"85","replacedBy":"96"},{"ruleId":"89","severity":1,"message":"94","line":1,"column":21,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"97","line":24,"column":20,"nodeType":"91","messageId":"92","endLine":24,"endColumn":38},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'useEffect' is defined but never used.",["98"],["99"],"'handleSendQuestion' is defined but never used.","no-global-assign","no-unsafe-negation"]